services:

 elasticsearch:
  image: elasticsearch:tran
  container_name: elasticsearch
  build:
   context: elasticsearch
   dockerfile: Dockerfile

  volumes: 
   - els_data:/usr/share/elasticsearch/data
   - ca:/usr/share/elasticsearch/config/certs/ca
   - elasticsearch_certs:/usr/share/elasticsearch/config/certs/elasticsearch
  environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  depends_on:
    setup:
      condition: service_healthy
  healthcheck:
    test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD} -s --cacert /usr/share/elasticsearch/config/certs/ca/ca.crt https://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
    interval: 10s
    timeout: 10s
    retries: 5

 setup:
  image: setup:tran
  container_name: setup
  build:
    context: setup
    dockerfile: Dockerfile
  environment:
    - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    - KIBANA_PASSWORD=${KIBANA_PASSWORD}
    - LOGSTASH_PASSWORD=${LOGSTASH_PASSWORD}
    - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
  volumes:
    - ca:/usr/share/elasticsearch/config/certs/ca
    - elasticsearch_certs:/usr/share/elasticsearch/config/certs/elasticsearch
    - logstash_certs:/usr/share/elasticsearch/config/certs/logstash
    - kibana_certs:/usr/share/elasticsearch/config/certs/kibana
    - ./setup/utils/instances.yml:/usr/share/elasticsearch/config/instances.yml
    - ./setup/dashboard.ndjson:/usr/share/kibana/dashboard.ndjson
  healthcheck:
    test: ["CMD", "test", "-f", "/tmp/certs_ready"]
    interval: 3s
    retries: 7
    start_period: 2s
    timeout: 3s

 logstash:
  image: logstash:tran
  container_name: logstash
  build:
   context: logstash
   dockerfile: Dockerfile
  depends_on:
    setup:
      condition: service_healthy
  volumes:
    - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
    - ./logstash/pipeline:/usr/share/logstash/pipeline
    - ca:/usr/share/logstash/config/certs/ca
    - logstash_certs:/usr/share/logstash/config/certs/logstash
  environment:
    - LOGSTASH_PASSWORD=$LOGSTASH_PASSWORD

 kibana:
  image: kibana:tran
  build:
   context: kibana
   dockerfile: Dockerfile
  container_name: kibana
  depends_on:
    setup:
      condition: service_healthy
  environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
  volumes:
    - ca:/usr/share/kibana/config/certs/ca
    - kibana_certs:/usr/share/kibana/config/certs/kibana
  ports:
   - "5601:5601"

 backend:
  image: backend
  container_name: backend
  build:
    context: backend
    dockerfile: Dockerfile
  ports:
    - "3000:3000"
  volumes:
    - ./backend/src:/app/src
    - ./logs:/app/logs

  
volumes:
 els_data:
 ca:
 elasticsearch_certs:
 kibana_certs:
 logstash_certs:
